function plotMeanODFBias (weight, snr, bVal, dAngle)

close all
fileName = sprintf('SimData/Bias [Weight=(%0.1f, %0.1f)][sepAngle=%d][SNR=%d][bVal=%d].mat', weight(1), weight(2), dAngle, snr, bVal);
load(fileName);
real_ODF = real_ODF/sum(real_ODF);

nSamples = 100:25:1000;
nNeighbors = 27;
biases = zeros(1, length(nSamples));

for i=1%:length(nSamples)
    randIdx = randperm(size(sq_ODF_matrix,2));
    n =1;
    odfLog = 0;
    for j=1%:nSamples(i)
        rand_sq_ODF_matrix = sq_ODF_matrix(:, randIdx(n:n+nNeighbors-1));
        n = n+nNeighbors;
        mean_ODF = calc_ODF_mean(rand_sq_ODF_matrix);
        mean_ODF_coef = G\(mean_ODF.^2);
        figure, plotTensors(mean_ODF_coef)
        d = dot(mean_ODF, real_ODF);
        odfLog = odfLog+(real_ODF-d*mean_ODF)/sqrt(1-d*d)*acos(d);
    end
    odfLog = odfLog/nSamples(i);
    disp(['Sample no. = ', num2str(nSamples(i))]);
    disp('Logarithm = ');
    disp(odfLog);
    biases(i) = norm(odfLog);
end

figure, plot(nSamples, biases);
save(fileName, 'nSamples', 'biases', '-append');

end